{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Convert_time_zone": {
                "inputs": {
                    "baseTime": "@triggerBody()?['data']?['essentials']?['firedDateTime']",
                    "destinationTimeZone": "China Standard Time",
                    "formatString": "G",
                    "sourceTimeZone": "UTC"
                },
                "kind": "ConvertTimeZone",
                "runAfter": {
                    "Initialize_variable_for_Alert_Target_ID": [
                        "Succeeded",
                        "Failed"
                    ]
                },
                "type": "Expression"
            },
            "Initialize_variable_for_Alert_Target_ID": {
                "inputs": {
                    "variables": [
                        {
                            "name": "AffectedResource",
                            "type": "array",
                            "value": "@split(triggerBody()?['data']?['essentials']?['alertTargetIDs'][0], '/')"
                        }
                    ]
                },
                "runAfter": {
                    "飞书自定义机器人webhook地址": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "根据MonitoringService字段判断告警类型": {
                "cases": {
                    "Cost_Alert": {
                        "actions": {
                            "HTTP推送Cost告警到飞书": {
                                "inputs": {
                                    "body": {
                                        "content": {
                                            "text": "Azure告警：\n  告警类型: 成本开支 \n  预算使用范围: @{body('解析Cost_Alert的AlertContext')?['AlertData']?['Scope']}\n 预算上限 ：@{body('解析Cost_Alert的AlertContext')?['AlertData']?['BudgetThreshold']} \n  已使用: @{body('解析Cost_Alert的AlertContext')?['AlertData']?['SpentAmount']}\n 预算人员：@{body('解析Cost_Alert的AlertContext')?['AlertData']?['BudgetCreator']}\n  预算告警类型：@{body('解析Cost_Alert的AlertContext')?['AlertData']?['ThresholdType']}\n  告警时间: @{body('Convert_time_zone')}\n  本计费周期内预测消费总额: @{body('解析Cost_Alert的AlertContext')?['AlertData']?['ForecastedTotalForPeriod']} "
                                        },
                                        "msg_type": "text"
                                    },
                                    "headers": {
                                        "Content-Type": "application/json"
                                    },
                                    "method": "POST",
                                    "uri": "@variables('feishu-webhook-url')"
                                },
                                "runAfter": {
                                    "解析Cost_Alert的AlertContext": [
                                        "Succeeded",
                                        "Failed"
                                    ]
                                },
                                "type": "Http"
                            },
                            "Response_Cost_Alert": {
                                "inputs": {
                                    "body": "success",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "HTTP推送Cost告警到飞书": [
                                        "Succeeded",
                                        "Failed",
                                        "Skipped",
                                        "TimedOut"
                                    ]
                                },
                                "type": "Response"
                            },
                            "解析Cost_Alert的AlertContext": {
                                "inputs": {
                                    "content": "@triggerBody()?['data']?['alertContext']",
                                    "schema": {
                                        "properties": {
                                            "AlertCategory": {
                                                "type": "string"
                                            },
                                            "AlertData": {
                                                "properties": {
                                                    "BudgetCreator": {
                                                        "type": "string"
                                                    },
                                                    "BudgetId": {
                                                        "type": "string"
                                                    },
                                                    "BudgetName": {
                                                        "type": "string"
                                                    },
                                                    "BudgetStartDate": {
                                                        "type": "string"
                                                    },
                                                    "BudgetThreshold": {
                                                        "type": "string"
                                                    },
                                                    "BudgetType": {
                                                        "type": "string"
                                                    },
                                                    "ForecastedTotalForPeriod": {
                                                        "type": "string"
                                                    },
                                                    "NotificationThresholdAmount": {
                                                        "type": "string"
                                                    },
                                                    "Scope": {
                                                        "type": "string"
                                                    },
                                                    "SpentAmount": {
                                                        "type": "string"
                                                    },
                                                    "ThresholdType": {
                                                        "type": "string"
                                                    },
                                                    "Unit": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "ParseJson"
                            }
                        },
                        "case": "CostAlerts"
                    },
                    "Service_Health": {
                        "actions": {
                            "For_each_(impactedservices)": {
                                "actions": {
                                    "HTTP推送到Feishu（Service告警）": {
                                        "inputs": {
                                            "body": {
                                                "content": {
                                                    "text": "Azure告警：\n  告警类型: 服务告警 \n  受影响的服务: @{items('For_each_(impactedservices)')?['ServiceName']}\n  受影响区域：@{items('For_each_(impactedservices)')?['ImpactedRegions']}\n  告警时间: @{body('Convert_time_zone')} \n  告警内容：@{triggerBody()?['data']?['essentials']?['description']}\n  参考信息: @{body('解析ServiceHealth告警AlertContext')?['properties']?['communication']}"
                                                },
                                                "msg_type": "text"
                                            },
                                            "headers": {
                                                "Content-Type": "application/json"
                                            },
                                            "method": "POST",
                                            "uri": "@variables('feishu-webhook-url')"
                                        },
                                        "type": "Http"
                                    }
                                },
                                "foreach": "@outputs('解析ServiceHealth告警AlertContext')?['body']?['properties']?['impactedServices']",
                                "runAfter": {
                                    "解析ServiceHealth告警AlertContext": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Foreach"
                            },
                            "Response_Service_Health_Alert": {
                                "inputs": {
                                    "body": "success",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "For_each_(impactedservices)": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Response"
                            },
                            "解析ServiceHealth告警AlertContext": {
                                "inputs": {
                                    "content": "@triggerBody()?['data']?['alertContext']",
                                    "schema": {
                                        "properties": {
                                            "ResourceType": {},
                                            "authorization": {},
                                            "caller": {},
                                            "channels": {
                                                "type": "integer"
                                            },
                                            "claims": {},
                                            "correlationId": {
                                                "type": "string"
                                            },
                                            "eventDataId": {
                                                "type": "string"
                                            },
                                            "eventSource": {
                                                "type": "integer"
                                            },
                                            "eventTimestamp": {
                                                "type": "string"
                                            },
                                            "httpRequest": {},
                                            "level": {
                                                "type": "integer"
                                            },
                                            "operationId": {
                                                "type": "string"
                                            },
                                            "operationName": {
                                                "type": "string"
                                            },
                                            "properties": {
                                                "properties": {
                                                    "IsSynthetic": {
                                                        "type": "string"
                                                    },
                                                    "communication": {
                                                        "type": "string"
                                                    },
                                                    "communicationId": {
                                                        "type": "string"
                                                    },
                                                    "defaultLanguageContent": {
                                                        "type": "string"
                                                    },
                                                    "defaultLanguageTitle": {
                                                        "type": "string"
                                                    },
                                                    "impactMitigationTime": {
                                                        "type": "string"
                                                    },
                                                    "impactStartTime": {
                                                        "type": "string"
                                                    },
                                                    "impactType": {
                                                        "type": "string"
                                                    },
                                                    "impactedServices": {
                                                        "items": {
                                                            "properties": {
                                                                "ImpactedRegions": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "RegionName": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "RegionName"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "ServiceName": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "ImpactedRegions",
                                                                "ServiceName"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "impactedServicesTableRows": {
                                                        "type": "string"
                                                    },
                                                    "incidentType": {
                                                        "type": "string"
                                                    },
                                                    "isHIR": {
                                                        "type": "string"
                                                    },
                                                    "region": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stage": {
                                                        "type": "string"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "trackingId": {
                                                        "type": "string"
                                                    },
                                                    "version": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "status": {
                                                "type": "string"
                                            },
                                            "subStatus": {},
                                            "submissionTimestamp": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "ParseJson"
                            }
                        },
                        "case": "ServiceHealth"
                    },
                    "SmartDetector告警": {
                        "actions": {
                            "HTTP_飞书通知-Smart告警": {
                                "inputs": {
                                    "body": {
                                        "content": {
                                            "text": "Azure告警：\n  告警类型：智能告警\n  订阅:@{variables('AffectedResource')[2]}\n  资源组:  @{variables('AffectedResource')[4]}\n  资源类型： @{variables('AffectedResource')[6]} \n  资源名称：@{concat(variables('AffectedResource')[7], '/', variables('AffectedResource')[8])} \n  告警时间:  @{body('Convert_time_zone')}\n  告警内容：@{body('Parse_JSON-SmartDector告警')?['DetectionSummary']}\n  异常值: @{body('Parse_JSON-SmartDector告警')?['DetectedValue']}\n  正常值：@{body('Parse_JSON-SmartDector告警')?['NormalValue']}"
                                        },
                                        "msg_type": "text"
                                    },
                                    "headers": {
                                        "Content-Type": "application/json"
                                    },
                                    "method": "POST",
                                    "uri": "@variables('feishu-webhook-url')"
                                },
                                "runAfter": {
                                    "Parse_JSON-SmartDector告警": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Http"
                            },
                            "Parse_JSON-SmartDector告警": {
                                "inputs": {
                                    "content": "@triggerBody()?['data']?['alertContext']",
                                    "schema": {
                                        "properties": {
                                            "AnalysisTimestamp": {
                                                "type": "string"
                                            },
                                            "DetectedValue": {
                                                "type": "string"
                                            },
                                            "DetectionSummary": {
                                                "type": "string"
                                            },
                                            "FormattedOccurrenceTime": {
                                                "type": "string"
                                            },
                                            "NormalValue": {
                                                "type": "string"
                                            },
                                            "PresentationInsightEventRequest": {
                                                "type": "string"
                                            },
                                            "SmartDetectorId": {
                                                "type": "string"
                                            },
                                            "SmartDetectorName": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "ParseJson"
                            },
                            "Response_smart_alert": {
                                "inputs": {
                                    "body": "success",
                                    "statusCode": 200
                                },
                                "kind": "Http",
                                "runAfter": {
                                    "HTTP_飞书通知-Smart告警": [
                                        "Succeeded",
                                        "TimedOut",
                                        "Skipped",
                                        "Failed"
                                    ]
                                },
                                "type": "Response"
                            }
                        },
                        "case": "SmartDetector"
                    }
                },
                "default": {
                    "actions": {
                        "根据Alert_Signal_Type判断确认alertContext格式": {
                            "cases": {
                                "Activity_Log_Alert": {
                                    "actions": {
                                        "HTTP推送到飞书(Activity_Log)": {
                                            "inputs": {
                                                "body": {
                                                    "content": {
                                                        "text": "Azure告警：\n  告警类型: 操作日志 \n  订阅:@{variables('AffectedResource')[2]}\n  资源组:  @{variables('AffectedResource')[4]}\n  资源类型： @{variables('AffectedResource')[6]} \n  资源名称：@{concat(variables('AffectedResource')[7], '/', variables('AffectedResource')[8])} \n  告警时间: @{body('Convert_time_zone')} \n  告警内容：@{triggerBody()?['data']?['essentials']?['description']}\n  参考信息: @{body('解析Resource_Health_告警AlertContext')?['properties']?['title']}@{body('解析Resource_Health_告警AlertContext')?['operationName']}"
                                                    },
                                                    "msg_type": "text"
                                                },
                                                "headers": {
                                                    "Content-Type": "application/json"
                                                },
                                                "method": "POST",
                                                "uri": "@variables('feishu-webhook-url')"
                                            },
                                            "runAfter": {
                                                "解析Resource_Health_告警AlertContext": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http"
                                        },
                                        "Response_Activity_Log": {
                                            "inputs": {
                                                "body": "success",
                                                "statusCode": 200
                                            },
                                            "kind": "Http",
                                            "runAfter": {
                                                "HTTP推送到飞书(Activity_Log)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Response"
                                        },
                                        "解析Resource_Health_告警AlertContext": {
                                            "inputs": {
                                                "content": "@triggerBody()?['data']?['alertContext']",
                                                "schema": {
                                                    "properties": {
                                                        "Activity Log Event Description": {},
                                                        "channels": {
                                                            "type": "string"
                                                        },
                                                        "correlationId": {
                                                            "type": "string"
                                                        },
                                                        "eventDataId": {
                                                            "type": "string"
                                                        },
                                                        "eventSource": {
                                                            "type": "string"
                                                        },
                                                        "eventTimestamp": {
                                                            "type": "string"
                                                        },
                                                        "level": {
                                                            "type": "string"
                                                        },
                                                        "operationId": {
                                                            "type": "string"
                                                        },
                                                        "operationName": {
                                                            "type": "string"
                                                        },
                                                        "properties": {
                                                            "properties": {
                                                                "cause": {
                                                                    "type": "string"
                                                                },
                                                                "currentHealthStatus": {
                                                                    "type": "string"
                                                                },
                                                                "details": {},
                                                                "previousHealthStatus": {
                                                                    "type": "string"
                                                                },
                                                                "title": {
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "status": {
                                                            "type": "string"
                                                        },
                                                        "submissionTimestamp": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "ParseJson"
                                        }
                                    },
                                    "case": "Activity Log"
                                },
                                "Log_Alert_v2": {
                                    "actions": {
                                        "HTTP推送到飞书-Logv2": {
                                            "inputs": {
                                                "body": {
                                                    "content": {
                                                        "text": "Azure告警：\n  告警类型: 日志告警v2 \n  订阅:@{variables('AffectedResource')[2]}\n  资源组:  @{variables('AffectedResource')[4]}\n  资源类型： @{variables('AffectedResource')[6]} \n  资源名称：@{concat(variables('AffectedResource')[7], '/', variables('AffectedResource')[8])} \n  告警时间:  @{body('Convert_time_zone')}\n  告警内容：@{triggerBody()?['data']?['essentials']?['description']}\n  参考信息: "
                                                    },
                                                    "msg_type": "text"
                                                },
                                                "headers": {
                                                    "Content-Type": "application/json"
                                                },
                                                "method": "POST",
                                                "uri": "@variables('feishu-webhook-url')"
                                            },
                                            "runAfter": {
                                                "Parse_JSON_AlertContext_Log_V2": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http"
                                        },
                                        "Parse_JSON_AlertContext_Log_V2": {
                                            "inputs": {
                                                "content": "@triggerBody()?['data']?['alertContext']",
                                                "schema": {
                                                    "properties": {
                                                        "condition": {
                                                            "properties": {
                                                                "allOf": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "dimensions": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "name",
                                                                                        "value"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "failingPeriods": {
                                                                                "properties": {
                                                                                    "minFailingPeriodsToAlert": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "numberOfEvaluationPeriods": {
                                                                                        "type": "integer"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "linkToFilteredSearchResultsAPI": {
                                                                                "type": "string"
                                                                            },
                                                                            "linkToFilteredSearchResultsUI": {
                                                                                "type": "string"
                                                                            },
                                                                            "linkToSearchResultsAPI": {
                                                                                "type": "string"
                                                                            },
                                                                            "linkToSearchResultsUI": {
                                                                                "type": "string"
                                                                            },
                                                                            "metricMeasureColumn": {},
                                                                            "metricValue": {
                                                                                "type": "integer"
                                                                            },
                                                                            "operator": {
                                                                                "type": "string"
                                                                            },
                                                                            "searchQuery": {
                                                                                "type": "string"
                                                                            },
                                                                            "targetResourceTypes": {
                                                                                "type": "string"
                                                                            },
                                                                            "threshold": {
                                                                                "type": "string"
                                                                            },
                                                                            "timeAggregation": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "searchQuery",
                                                                            "metricMeasureColumn",
                                                                            "targetResourceTypes",
                                                                            "operator",
                                                                            "threshold",
                                                                            "timeAggregation",
                                                                            "dimensions",
                                                                            "metricValue",
                                                                            "failingPeriods",
                                                                            "linkToSearchResultsUI",
                                                                            "linkToFilteredSearchResultsUI",
                                                                            "linkToSearchResultsAPI",
                                                                            "linkToFilteredSearchResultsAPI"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "windowEndTime": {
                                                                    "type": "string"
                                                                },
                                                                "windowSize": {
                                                                    "type": "string"
                                                                },
                                                                "windowStartTime": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "conditionType": {
                                                            "type": "string"
                                                        },
                                                        "properties": {
                                                            "properties": {
                                                                "customKey1": {
                                                                    "type": "string"
                                                                },
                                                                "customKey2": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "ParseJson"
                                        },
                                        "Response_logv2": {
                                            "inputs": {
                                                "body": "success",
                                                "statusCode": 200
                                            },
                                            "kind": "Http",
                                            "runAfter": {
                                                "HTTP推送到飞书-Logv2": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Response"
                                        }
                                    },
                                    "case": "Log"
                                },
                                "Metics_Alert": {
                                    "actions": {
                                        "For_each": {
                                            "actions": {
                                                "HTTP推送到飞书（指标告警）": {
                                                    "inputs": {
                                                        "body": {
                                                            "content": {
                                                                "text": "Azure告警：\n  告警类型：性能指标 \n  订阅:@{variables('AffectedResource')[2]}\n  资源组:  @{variables('AffectedResource')[4]}\n  资源类型： @{variables('AffectedResource')[6]} \n  资源名称：@{concat(variables('AffectedResource')[7], '/', variables('AffectedResource')[8])} \n  告警时间: @{body('Convert_time_zone')} \n  告警内容：@{triggerBody()?['data']?['essentials']?['description']}\n  参考信息: @{items('For_each')?['metricName']} @{items('For_each')?['operator']} @{items('For_each')?['metricValue']}"
                                                            },
                                                            "msg_type": "text"
                                                        },
                                                        "headers": {
                                                            "Content-Type": "application/json"
                                                        },
                                                        "method": "POST",
                                                        "uri": "@variables('feishu-webhook-url')"
                                                    },
                                                    "limit": {
                                                        "timeout": "PT5S"
                                                    },
                                                    "operationOptions": "DisableAsyncPattern",
                                                    "type": "Http"
                                                }
                                            },
                                            "foreach": "@outputs('Parse_JSON_AlertContext_Metrics')?['body']?['condition']?['allOf']",
                                            "runAfter": {
                                                "Parse_JSON_AlertContext_Metrics": [
                                                    "Succeeded",
                                                    "Failed"
                                                ]
                                            },
                                            "type": "Foreach"
                                        },
                                        "Parse_JSON_AlertContext_Metrics": {
                                            "inputs": {
                                                "content": "@triggerBody()?['data']?['alertContext']",
                                                "schema": {
                                                    "properties": {
                                                        "condition": {
                                                            "properties": {
                                                                "allOf": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "dimensions": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "name",
                                                                                        "value"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "metricName": {
                                                                                "type": "string"
                                                                            },
                                                                            "metricNamespace": {
                                                                                "type": [
                                                                                    "string",
                                                                                    "null"
                                                                                ]
                                                                            },
                                                                            "metricValue": {
                                                                                "type": "number"
                                                                            },
                                                                            "operator": {
                                                                                "type": "string"
                                                                            },
                                                                            "threshold": {
                                                                                "type": "string"
                                                                            },
                                                                            "timeAggregation": {
                                                                                "type": "string"
                                                                            },
                                                                            "webTestName": {}
                                                                        },
                                                                        "required": [
                                                                            "metricName",
                                                                            "metricNamespace",
                                                                            "operator",
                                                                            "threshold",
                                                                            "timeAggregation",
                                                                            "dimensions",
                                                                            "metricValue",
                                                                            "webTestName"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "windowEndTime": {
                                                                    "type": "string"
                                                                },
                                                                "windowSize": {
                                                                    "type": "string"
                                                                },
                                                                "windowStartTime": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "conditionType": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "ParseJson"
                                        },
                                        "Response_Metrics": {
                                            "inputs": {
                                                "body": "success",
                                                "statusCode": 200
                                            },
                                            "kind": "Http",
                                            "runAfter": {
                                                "For_each": [
                                                    "Succeeded",
                                                    "TimedOut",
                                                    "Skipped",
                                                    "Failed"
                                                ]
                                            },
                                            "type": "Response"
                                        }
                                    },
                                    "case": "Metric"
                                }
                            },
                            "default": {
                                "actions": {
                                    "Default_Response": {
                                        "inputs": {
                                            "body": "default",
                                            "statusCode": 200
                                        },
                                        "kind": "Http",
                                        "type": "Response"
                                    }
                                }
                            },
                            "expression": "@triggerBody()?['data']?['essentials']?['signalType']",
                            "type": "Switch"
                        }
                    }
                },
                "expression": "@triggerBody()?['data']?['essentials']?['monitoringService']",
                "runAfter": {
                    "Convert_time_zone": [
                        "Succeeded"
                    ]
                },
                "type": "Switch"
            },
            "飞书自定义机器人webhook地址": {
                "inputs": {
                    "variables": [
                        {
                            "name": "feishu-webhook-url",
                            "type": "string",
                            "value": "https://open.feishu.cn/open-apis/bot/v2/hook/{your own uuid}"
                        }
                    ]
                },
                "runAfter": {},
                "type": "InitializeVariable"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "$connections": {
                "defaultValue": {},
                "type": "Object"
            }
        },
        "triggers": {
            "HTTP_Trigger_from_External": {
                "inputs": {
                    "method": "POST",
                    "relativePath": "alert",
                    "schema": {
                        "properties": {
                            "data": {
                                "properties": {
                                    "alertContext": {
                                        "properties": {},
                                        "type": "object"
                                    },
                                    "essentials": {
                                        "properties": {
                                            "alertContextVersion": {
                                                "type": "string"
                                            },
                                            "alertId": {
                                                "type": "string"
                                            },
                                            "alertRule": {
                                                "type": "string"
                                            },
                                            "alertTargetIDs": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "essentialsVersion": {
                                                "type": "string"
                                            },
                                            "firedDateTime": {
                                                "type": "string"
                                            },
                                            "monitorCondition": {
                                                "type": "string"
                                            },
                                            "monitoringService": {
                                                "type": "string"
                                            },
                                            "originAlertId": {
                                                "type": "string"
                                            },
                                            "resolvedDateTime": {
                                                "type": "string"
                                            },
                                            "severity": {
                                                "type": "string"
                                            },
                                            "signalType": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "schemaId": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "kind": "Http",
                "type": "Request"
            }
        }
    },
    "parameters": {
        "$connections": {
            "value": {}
        }
    }
}
